{"version":3,"sources":["wires-events.js"],"names":[],"mappings":";;;;;;;;;;;;;MAAO,CAAC;;MACA,KAAK,eAAL,KAAK;;;;;;;AAMb,MAAM,cAAc,GAAG,KAAK,CAAC;;;;;;;;;;AAU7B,WAAS,UAAU,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE;AAC3C,QAAI,CAAC,IAAI,EAAE;AACT,aAAO,IAAI,CAAC;KACb;;;AAGD,QAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,WAAK,IAAI,GAAG,IAAI,IAAI,EAAE;AACpB,WAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;OACvD;AACD,aAAO,KAAK,CAAC;KACd;;;AAGD,QAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC7B,UAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AACvC,WAAK,IAAI,CAAC,GAAG,CAAC;UAAE,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD,WAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;OACjD;AACD,aAAO,KAAK,CAAC;KACd;;AAED,WAAO,IAAI,CAAC;GACb;;;;;;;;;;AAUD,WAAS,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE;AACpC,QAAI,EAAE;QAAE,CAAC,GAAG,CAAC,CAAC;QAAE,CAAC,GAAG,MAAM,CAAC,MAAM;QAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;QAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5E,YAAQ,IAAI,CAAC,MAAM;AACjB,WAAK,CAAC;AAAE,eAAO,EAAE,CAAC,GAAG,CAAC,EAAE;AAAE,WAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;SAAE,AAAC,OAAO;AAAA,AAC3E,WAAK,CAAC;AAAE,eAAO,EAAE,CAAC,GAAG,CAAC,EAAE;AAAE,WAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;SAAE,AAAC,OAAO;AAAA,AAC/E,WAAK,CAAC;AAAE,eAAO,EAAE,CAAC,GAAG,CAAC,EAAE;AAAE,WAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAAE,AAAC,OAAO;AAAA,AACnF,WAAK,CAAC;AAAE,eAAO,EAAE,CAAC,GAAG,CAAC,EAAE;AAAE,WAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA,CAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;SAAE,AAAC,OAAO;AAAA,AACvF;AAAS,eAAO,EAAE,CAAC,GAAG,CAAC,EAAE;AAAE,WAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA,CAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAAE,AAAC,OAAO;AAAA,KACpF;GACF;;;;;;;;;;;;;;;;;AAiBD,MAAI,MAAM,GAAG,IAAI,KAAK,CAAC;;;;;;;;;AASrB,MAAE,EAAA,YAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC1B,UAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;AACnE,eAAO,IAAI,CAAC;OACb;;AAED,UAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,GAAG,EAAE,CAAA,AAAC,CAAC;;AAEpC,UAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAA,AAAC,CAAC;;AAE7D,YAAM,CAAC,IAAI,CAAC;AACV,gBAAQ,EAAE,QAAQ;AAClB,eAAO,EAAE,OAAO;AAChB,WAAG,EAAE,OAAO,IAAI,IAAI;OACrB,CAAC,CAAC;;AAEH,aAAO,IAAI,CAAC;KACb;;;;;;;;;AASD,QAAI,EAAA,cAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC5B,UAAI,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE;AACrE,eAAO,IAAI,CAAC;OACb;;AAED,UAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,YAAW;AAC3B,YAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrB,gBAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;OACjC,CAAC,CAAC;;AAEH,UAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;AAE1B,aAAO,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;KACrC;;;;;;;;;;AAUD,OAAG,EAAA,aAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC3B,UAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,EAAE;AACxE,eAAO,IAAI,CAAC;OACb;;;AAGD,UAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,EAAE;AAClC,YAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;AACtB,eAAO,IAAI,CAAC;OACb;;AAED,UAAI,KAAK,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACjD,WAAK,IAAI,CAAC,GAAG,CAAC;UAAE,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD,YAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;;AAGhB,YAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAChC,YAAI,CAAC,MAAM,EAAE;AACX,mBAAS;SACV;;;AAGD,YAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,EAAE;AACzB,iBAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1B,mBAAS;SACV;;;AAGD,YAAI,SAAS,GAAG,EAAE,CAAC;AACnB,aAAK,IAAI,CAAC,GAAG,CAAC;YAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,cAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,cACE,QAAQ,IAAI,QAAQ,KAAK,KAAK,CAAC,QAAQ,IACvC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC,SAAS,IACrC,OAAO,IAAI,OAAO,KAAK,KAAK,CAAC,OAAO,EACpC;AACA,qBAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;WACvB;SACF;;;AAGD,YAAI,SAAS,CAAC,MAAM,EAAE;AACpB,cAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;SAChC,MAAM;AACL,iBAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC3B;OACF;;AAED,aAAO,IAAI,CAAC;KACb;;;;;;;;;;;AAWD,WAAO,EAAA,iBAAC,IAAI,EAAW;;UAAN,IAAI;;AAAJ,YAAI;;;AACnB,UAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACjB,eAAO,IAAI,CAAC;OACb;;AAED,UAAI,CAAC,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;AAC5C,eAAO,IAAI,CAAC;OACb;;AAED,UAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAChC,UAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;;AAEjC,UAAI,MAAM,EAAE;AACV,sBAAc,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;OAC9B;;AAED,UAAI,SAAS,EAAE;AACb,sBAAc,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;OACtC;;AAED,aAAO,IAAI,CAAC;KACb;;;;;;;;;;AAUD,YAAQ,EAAA,kBAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AAC5B,UAAI,WAAW,GAAG,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA,AAAC,CAAC;AAChE,UAAI,EAAE,GAAG,GAAG,CAAC,SAAS,KAAK,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC;;AAE5D,iBAAW,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;AAEtB,UAAI,CAAC,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACzC,gBAAQ,GAAG,IAAI,CAAC;OACjB;;AAED,SAAG,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;;AAE7B,aAAO,IAAI,CAAC;KACb;;;;;;AAMD,gBAAY,EAAA,sBAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AAChC,UAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,aAAK,IAAI,KAAK,IAAI,IAAI,EAAE;AACtB,cAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SAC5C;AACD,eAAO,IAAI,CAAC;OACb;;AAED,UAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC7B,YAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AACvC,aAAK,IAAI,CAAC,GAAG,CAAC;YAAE,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACtD,cAAI,CAAC,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;SAC5C;AACD,eAAO,IAAI,CAAC;OACb;;AAED,UAAI,CAAC,QAAQ,EAAE;AACb,eAAO,IAAI,CAAC;OACb;;AAED,UAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,YAAW;AAC3B,YAAI,CAAC,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACpC,gBAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;OACjC,CAAC,CAAC;;AAEH,UAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;AAE1B,aAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KACvC;;;;;;;;;AASD,iBAAa,EAAA,uBAAC,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AACjC,UAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;;AAEpC,UAAI,CAAC,WAAW,EAAE;AAChB,eAAO,IAAI,CAAC;OACb;;AAED,UAAI,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC;;AAEhC,UAAI,CAAC,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACzC,gBAAQ,GAAG,IAAI,CAAC;OACjB;;AAED,UAAI,GAAG,EAAE;AACP,SAAC,WAAW,GAAG,EAAE,CAAA,CAAE,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;OACzC;;AAED,WAAK,IAAI,EAAE,IAAI,WAAW,EAAE;AAC1B,WAAG,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;AACtB,WAAG,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;;AAE9B,YAAI,MAAM,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;AACpC,iBAAO,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;SAC9B;OACF;;AAED,aAAO,IAAI,CAAC;KACb;;GAEF,CAAC,CAAC;;mBAEY,MAAM","file":"wires-events.js","sourcesContent":["import _ from 'lodash';\nimport {Mixin} from 'wires-metal';\n\n/**\n * Regular expression used to split event strings.\n * @type {RegExp}\n */\nconst EVENT_SPLITTER = /\\s+/;\n\n/**\n * Implement fancy features of the Events API such as multiple event names\n * `\"change blur\"` and jQuery-style event maps `{change: action}` in terms of\n * the existing API.\n *\n * @private\n * @method _eventsApi\n */\nfunction _eventsApi(obj, action, name, rest) {\n  if (!name) {\n    return true;\n  }\n\n  // Handle event maps.\n  if (typeof name === 'object') {\n    for (var key in name) {\n      obj[action].apply(obj, [key, name[key]].concat(rest));\n    }\n    return false;\n  }\n\n  // Handle space separated event names.\n  if (EVENT_SPLITTER.test(name)) {\n    var names = name.split(EVENT_SPLITTER);\n    for (var i = 0, length = names.length; i < length; i++) {\n      obj[action].apply(obj, [names[i]].concat(rest));\n    }\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * A difficult-to-believe, but optimized internal dispatch function for\n * triggering events. Tries to keep the usual cases speedy (most internal\n * Backbone events have 3 arguments).\n *\n * @private\n * @method _triggerEvents\n */\nfunction _triggerEvents(events, args) {\n  var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n  switch (args.length) {\n    case 0: while (++i < l) { (ev = events[i]).callback.call(ev.ctx); } return;\n    case 1: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1); } return;\n    case 2: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2); } return;\n    case 3: while (++i < l) { (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); } return;\n    default: while (++i < l) { (ev = events[i]).callback.apply(ev.ctx, args); } return;\n  }\n}\n\n/**\n * A module that can be mixed in to *any object* in order to provide it with\n * custom events. You may bind with `on` or remove with `off` callback functions\n * to an event; `trigger`-ing an event fires all callbacks in succession.\n *\n * ```js\n * var object = {};\n * _.extend(object, Backbone.Events);\n * object.on('expand', function(){ alert('expanded'); });\n * object.trigger('expand');\n * ```\n *\n * @public\n * @mixin Events\n */\nvar Events = new Mixin({\n\n  /**\n   * Bind an event to a `callback` function. Passing `\"all\"` will bind the\n   * callback to all events fired.\n   *\n   * @public\n   * @method on\n   */\n  on(name, callback, context) {\n    if (!_eventsApi(this, 'on', name, [callback, context]) || !callback) {\n      return this;\n    }\n\n    this._events || (this._events = {});\n\n    var events = this._events[name] || (this._events[name] = []);\n\n    events.push({\n      callback: callback,\n      context: context,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * Bind an event to only be triggered a single time. After the first time the\n   * callback is invoked, it will be removed.\n   *\n   * @public\n   * @method once\n   */\n  once(name, callback, context) {\n    if (!_eventsApi(this, 'once', name, [callback, context]) || !callback) {\n      return this;\n    }\n\n    var self = this;\n    var once = _.once(function() {\n      self.off(name, once);\n      callback.apply(this, arguments);\n    });\n\n    once._callback = callback;\n\n    return this.on(name, once, context);\n  },\n\n  /**\n   * Remove one or many callbacks. If `context` is null, removes all callbacks\n   * with that function. If `callback` is null, removes all callbacks for the\n   * event. If `name` is null, removes all bound callbacks for all events.\n   *\n   * @public\n   * @method off\n   */\n  off(name, callback, context) {\n    if (!this._events || !_eventsApi(this, 'off', name, [callback, context])) {\n      return this;\n    }\n\n    // Remove all callbacks for all events.\n    if (!name && !callback && !context) {\n      this._events = void 0;\n      return this;\n    }\n\n    var names = name ? [name] : _.keys(this._events);\n    for (var i = 0, length = names.length; i < length; i++) {\n      name = names[i];\n\n      // Bail out if there are no events stored.\n      var events = this._events[name];\n      if (!events) {\n        continue;\n      }\n\n      // Remove all callbacks for this event.\n      if (!callback && !context) {\n        delete this._events[name];\n        continue;\n      }\n\n      // Find any remaining events.\n      var remaining = [];\n      for (var j = 0, k = events.length; j < k; j++) {\n        var event = events[j];\n        if (\n          callback && callback !== event.callback &&\n          callback !== event.callback._callback ||\n          context && context !== event.context\n        ) {\n          remaining.push(event);\n        }\n      }\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      if (remaining.length) {\n        this._events[name] = remaining;\n      } else {\n        delete this._events[name];\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Trigger one or many events, firing all bound callbacks. Callbacks are\n   * passed the same arguments as `trigger` is, apart from the event name\n   * (unless you're listening on `\"all\"`, which will cause your callback to\n   * receive the true name of the event as the first argument).\n   *\n   * @public\n   * @method trigger\n   */\n  trigger(name, ...args) {\n    if (!this._events) {\n      return this;\n    }\n\n    if (!_eventsApi(this, 'trigger', name, args)) {\n      return this;\n    }\n\n    var events = this._events[name];\n    var allEvents = this._events.all;\n\n    if (events) {\n      _triggerEvents(events, args);\n    }\n\n    if (allEvents) {\n      _triggerEvents(allEvents, arguments);\n    }\n\n    return this;\n  },\n\n  /**\n   * Inversion-of-control versions of `on` and `once`. Tell *this* object to\n   * listen to an event in another object ... keeping track of what it's\n   * listening to.\n   *\n   * @public\n   * @method listenTo\n   */\n  listenTo(obj, name, callback) {\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n\n    listeningTo[id] = obj;\n\n    if (!callback && typeof name === 'object') {\n      callback = this;\n    }\n\n    obj.on(name, callback, this);\n\n    return this;\n  },\n\n  /**\n   * @public\n   * @method listenToOnce\n   */\n  listenToOnce(obj, name, callback) {\n    if (typeof name === 'object') {\n      for (var event in name) {\n        this.listenToOnce(obj, event, name[event]);\n      }\n      return this;\n    }\n\n    if (EVENT_SPLITTER.test(name)) {\n      var names = name.split(EVENT_SPLITTER);\n      for (var i = 0, length = names.length; i < length; i++) {\n        this.listenToOnce(obj, names[i], callback);\n      }\n      return this;\n    }\n\n    if (!callback) {\n      return this;\n    }\n\n    var once = _.once(function() {\n      this.stopListening(obj, name, once);\n      callback.apply(this, arguments);\n    });\n\n    once._callback = callback;\n\n    return this.listenTo(obj, name, once);\n  },\n\n  /**\n   * Tell this object to stop listening to either specific events ... or to\n   * every object it's currently listening to.\n   *\n   * @public\n   * @method stopListening\n   */\n  stopListening(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n\n    if (!listeningTo) {\n      return this;\n    }\n\n    var remove = !name && !callback;\n\n    if (!callback && typeof name === 'object') {\n      callback = this;\n    }\n\n    if (obj) {\n      (listeningTo = {})[obj._listenId] = obj;\n    }\n\n    for (var id in listeningTo) {\n      obj = listeningTo[id];\n      obj.off(name, callback, this);\n\n      if (remove || _.isEmpty(obj._events)) {\n        delete this._listeningTo[id];\n      }\n    }\n\n    return this;\n  }\n\n});\n\nexport default Events;\n"],"sourceRoot":"/source/"}